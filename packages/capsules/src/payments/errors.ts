export enum PaymentsErrorType {
  INITIALIZATION_ERROR = 'INITIALIZATION_ERROR',
  INVALID_API_KEY = 'INVALID_API_KEY',
  INVALID_AMOUNT = 'INVALID_AMOUNT',
  INVALID_CURRENCY = 'INVALID_CURRENCY',
  PAYMENT_FAILED = 'PAYMENT_FAILED',
  CHARGE_FAILED = 'CHARGE_FAILED',
  REFUND_FAILED = 'REFUND_FAILED',
  CUSTOMER_NOT_FOUND = 'CUSTOMER_NOT_FOUND',
  CARD_DECLINED = 'CARD_DECLINED',
  INSUFFICIENT_FUNDS = 'INSUFFICIENT_FUNDS',
  EXPIRED_CARD = 'EXPIRED_CARD',
  INVALID_CARD = 'INVALID_CARD',
  WEBHOOK_VERIFICATION_FAILED = 'WEBHOOK_VERIFICATION_FAILED',
  SUBSCRIPTION_ERROR = 'SUBSCRIPTION_ERROR',
  TIMEOUT_ERROR = 'TIMEOUT_ERROR',
  NETWORK_ERROR = 'NETWORK_ERROR',
  PROVIDER_ERROR = 'PROVIDER_ERROR',
}

export class PaymentsError extends Error {
  constructor(
    public type: PaymentsErrorType,
    message: string,
    public details?: any
  ) {
    super(message);
    this.name = 'PaymentsError';
  }
}